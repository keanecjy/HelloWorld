{"version":3,"sources":["components/images/index.js","util/fakeUsers.js","components/images/boy1.svg","components/images/boy2.svg","components/images/boy3.svg","components/images/girl1.svg","components/images/girl2.svg","components/images/girl3.svg","components/picturecontainer/imagesList.js","components/picturecontainer/ListOfImages.js","components/nameholder/NameHolder.js","loginmodal/LoginModal.js","components/mapobject/SpeechBubble.js","components/UserAvatar.js","components/mapobject/UserPin.js","components/mapobject/Cluster.js","components/GoogleMap.js","components/chatbox/ChatTitle.js","components/chatbox/ChatMessage.js","components/chatbox/MessageList.js","components/chatbox/ChatInput.js","components/chatbox/ChatBox.js","components/button/ReCenterIcon.js","components/usercount/NumberOfUsers.js","App.js","reportWebVitals.js","index.js"],"names":["avatarList","defaultStartCoords","fakeUsers","Array","fill","map","val","index","_id","lat","Math","sin","PI","cos","lng","avatar","length","random","username","toString","latestMessage","undefined","listOfImages","boy1","boy2","boy3","girl1","girl2","girl3","ListOfImages","currentSelected","handleSelection","className","Object","entries","key","value","src","alt","style","boxShadow","onClick","NameHolder","socket","io","withCredentials","extraHeaders","useContext","StateContext","name","setName","image","setImage","useState","isPickAvatar","showAvatarPicker","Modal","show","onHide","size","dialogClassName","aria-labelledby","pic","emit","width","placeholder","onChange","event","newName","target","LoginModal","sendUserInput","sendMessage","setShow","backdrop","keyboard","centered","id","Form","onSubmit","preventDefault","handleSubmit","Title","required","type","Footer","SpeechBubble","children","UserAvatar","handleClick","UserPin","message","height","color","border","borderRadius","backgroundSize","backgroundPosition","Cluster","numPoints","createMapOptions","maps","zoomControlOptions","position","ControlPosition","LEFT_CENTER","ZoomControlStyle","SMALL","GoogleMap","users","mapOptions","setMapOptions","clusters","setClusters","useEffect","bounds","supercluster","minZoom","maxZoom","radius","wx","wy","points","bootstrapURLKeys","process","REACT_APP_GMAPS_API","center","zoom","yesIWantToUseGoogleMapApiInternals","options","groups","ChatTitle","ChatMessage","sender","text","senderId","socketId","isUserMessage","toggleUserMessage","float","backgroundColor","MessageList","messages","ChatInput","setMessage","e","ChatBox","isChatVisible","toggleChatVisibility","console","log","div","document","getElementById","scrollTop","scrollHeight","clientHeight","scrollToBottom","onMinimise","ReCenterIcon","NumberOfUsers","numOnline","React","createContext","SG_POSITION","createUserObj","data","parseFloat","App","setUsers","setMessages","setNumOnline","isUserInputted","setIsUserInputted","currLocation","setCurrLocation","on","msg","allUsers","user","cleanedData","prevUsers","newMessages","modifiedMsg","userId","prevMessages","ids","Map","forEach","set","usr","has","get","newUsers","Set","u","filter","number","navigator","geolocation","getCurrentPosition","location","coords","latitude","longitude","watchPosition","contextProviderValue","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49929377.chunk.js","sourcesContent":["export const avatarList = ['boy1', 'boy2', 'boy3', 'girl1', 'girl2', 'girl3'];\n","import { avatarList } from '../components/images';\r\n\r\nconst TOTAL_USERS_COUNT = 200;\r\n\r\nexport const defaultStartCoords = { lat: 1.3521, lng: 103.8198 };\r\n\r\nexport const fakeUsers = [...Array(TOTAL_USERS_COUNT)].fill(0).map((val, index) => ({\r\n  _id: index,\r\n  lat:\r\n    defaultStartCoords.lat +\r\n    0.2 * index * Math.sin((Math.PI * index) / 180) * Math.cos((23 * Math.PI * index) / 180) +\r\n    Math.sin(index / 180),\r\n  lng:\r\n    defaultStartCoords.lng +\r\n    0.2 * index * Math.cos((17 * Math.PI * index) / 180) * Math.sin((5 * Math.PI * index) / 180) +\r\n    Math.sin(index / 180),\r\n  avatar: avatarList[(avatarList.length * Math.random()) << 0],\r\n  username: 'User' + index.toString(10),\r\n  latestMessage: Math.random() < 0.5 ? 'Hello World!' : undefined,\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/boy1.2e82546e.svg\";","export default __webpack_public_path__ + \"static/media/boy2.59009ebf.svg\";","export default __webpack_public_path__ + \"static/media/boy3.e57c8b6c.svg\";","export default __webpack_public_path__ + \"static/media/girl1.8a35fe99.svg\";","export default __webpack_public_path__ + \"static/media/girl2.a0b1b314.svg\";","export default __webpack_public_path__ + \"static/media/girl3.4993fb4c.svg\";","import boy1 from '../images/boy1.svg';\r\nimport boy2 from '../images/boy2.svg';\r\nimport boy3 from '../images/boy3.svg';\r\nimport girl1 from '../images/girl1.svg';\r\nimport girl2 from '../images/girl2.svg';\r\nimport girl3 from '../images/girl3.svg';\r\n\r\nexport const listOfImages = {\r\n  boy1: boy1,\r\n  boy2: boy2,\r\n  boy3: boy3,\r\n  girl1: girl1,\r\n  girl2: girl2,\r\n  girl3: girl3,\r\n};\r\n","import React from 'react';\r\nimport { listOfImages } from './imagesList';\r\n\r\nconst ListOfImages = ({ currentSelected, handleSelection }) => {\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {Object.entries(listOfImages).map(([key, value]) => (\r\n        <img\r\n          src={value}\r\n          key={key}\r\n          alt=\"none\"\r\n          className=\"image-style\"\r\n          style={{\r\n            boxShadow: currentSelected === key && '0 0 0 1pt #163CC5',\r\n          }}\r\n          onClick={() => handleSelection(key)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfImages;\r\n","import React, { useContext, useState } from 'react';\r\nimport { StateContext } from '../../App';\r\nimport './styles.css';\r\nimport '../picturecontainer/styles.css';\r\nimport { listOfImages } from '../picturecontainer/imagesList';\r\nimport { Modal } from 'react-bootstrap';\r\nimport ListOfImages from '../picturecontainer/ListOfImages';\r\nimport io from 'socket.io-client';\r\n\r\nconst NameHolder = () => {\r\n  const socket = io('http://localhost:5000', {\r\n    withCredentials: true,\r\n    extraHeaders: {\r\n      'my-custom-header': 'abcd',\r\n    },\r\n  });\r\n\r\n  const { name, setName, image, setImage } = useContext(StateContext);\r\n  const [isPickAvatar, showAvatarPicker] = useState(false);\r\n\r\n  const handleSelection = (pic) => {\r\n    setImage(pic);\r\n    showAvatarPicker(false);\r\n    socket.emit('inputUpdateUser', {\r\n      avatar: pic,\r\n    });\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    const newName = event.target.value;\r\n    setName(newName);\r\n    socket.emit('inputUpdateUser', {\r\n      username: newName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={isPickAvatar}\r\n        onHide={() => showAvatarPicker(false)}\r\n        size=\"lg\"\r\n        dialogClassName=\"appear-on-left\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n      >\r\n        <ListOfImages currentSelected={image} handleSelection={handleSelection} />\r\n      </Modal>\r\n      <div className=\"row-flex\">\r\n        <img\r\n          src={image ? listOfImages[image] : listOfImages['boy1']}\r\n          alt=\"none\"\r\n          className=\"image-style\"\r\n          style={{ width: `50px` }}\r\n          onClick={() => showAvatarPicker(true)}\r\n        />\r\n        <input className=\"input-name\" placeholder={name} onChange={handleNameChange} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NameHolder;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport './styles.css';\r\nimport ListOfImages from '../components/picturecontainer/ListOfImages';\r\nimport { StateContext } from '../App';\r\n\r\nconst LoginModal = () => {\r\n  const { name, image, setName, setImage, sendUserInput, sendMessage } = useContext(StateContext);\r\n  const [show, setShow] = useState(true);\r\n\r\n  const handleSubmit = (event) => {\r\n    setShow(false);\r\n    event.preventDefault();\r\n    sendUserInput(name, image);\r\n    sendMessage(\"Hello everybody, I'm \" + name);\r\n  };\r\n\r\n  const handleChange = (event) => setName(event.target.value);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"lg\"\r\n      dialogClassName=\"modal-styles\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      id=\"modal-styles\"\r\n    >\r\n      <Form onSubmit={(event) => handleSubmit(event)}>\r\n        <Modal.Title id=\"modal-header\">\r\n          <p>What should we call you?</p>\r\n        </Modal.Title>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"input your name\"\r\n          onChange={handleChange}\r\n          className=\"name-box\"\r\n        />\r\n        <div className=\"row-container\">\r\n          <p>Pick your avatar</p>\r\n          <ListOfImages currentSelected={image} handleSelection={setImage} />\r\n        </div>\r\n        <Modal.Footer id=\"modal-footer\">\r\n          <button type=\"submit\" className={\"my-button\"}>Get chatting!</button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","import React from 'react';\r\nimport './SpeechBubble.css';\r\n\r\nfunction SpeechBubble({ children }) {\r\n  return <div className={'speech-bubble'}>{children}</div>;\r\n}\r\n\r\nexport default SpeechBubble;\r\n","import React from 'react';\r\nimport { listOfImages } from './picturecontainer/imagesList';\r\nimport boy1 from './images/boy1.svg';\r\n\r\nfunction UserAvatar({ handleClick, avatar, style }) {\r\n  return (\r\n    <>\r\n      <img src={listOfImages[avatar]} alt={boy1} onClick={handleClick} style={style} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserAvatar;\r\n","import React from 'react';\r\nimport './UserPin.css';\r\nimport SpeechBubble from './SpeechBubble';\r\nimport UserAvatar from '../UserAvatar';\r\n\r\nfunction UserPin({ username, avatar, message }) {\r\n  return (\r\n    <div className={'user'}>\r\n      {message && <SpeechBubble>{message}</SpeechBubble>}\r\n      <div>\r\n        <UserAvatar\r\n          avatar={avatar}\r\n          style={{\r\n            width: '48px',\r\n            height: '48px',\r\n            color: '#fff',\r\n            border: '2px solid #fff',\r\n            borderRadius: '50%',\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n          }}\r\n        />\r\n      </div>\r\n      <p className={'user-name'}>{username || 'unnamed'}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPin;\r\n","import React from 'react';\r\nimport './Cluster.css';\r\n\r\nfunction Cluster({ numPoints }) {\r\n  return <div className={'cluster-group'}>{numPoints}</div>;\r\n}\r\n\r\nexport default Cluster;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport supercluster from 'points-cluster';\r\n\r\nimport './GoogleMap.css';\r\nimport UserPin from './mapobject/UserPin';\r\nimport Cluster from './mapobject/Cluster';\r\nimport { StateContext } from '../App';\r\n\r\nfunction createMapOptions(maps) {\r\n  return {\r\n    zoomControlOptions: {\r\n      position: maps.ControlPosition.LEFT_CENTER,\r\n      style: maps.ZoomControlStyle.SMALL,\r\n    },\r\n  };\r\n}\r\n\r\nfunction GoogleMap({ users }) {\r\n  const { mapOptions, setMapOptions } = useContext(StateContext);\r\n  const [clusters, setClusters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (mapOptions && mapOptions.bounds) {\r\n      const clusters = supercluster(users, {\r\n        minZoom: 0,\r\n        maxZoom: 16,\r\n        radius: 60,\r\n      });\r\n\r\n      setClusters(\r\n        clusters(mapOptions).map(({ wx, wy, numPoints, points }) => ({\r\n          lat: wy,\r\n          lng: wx,\r\n          numPoints: numPoints,\r\n          id: `${numPoints}_${points[0]._id}`,\r\n          points: points,\r\n        }))\r\n      );\r\n    }\r\n  }, [mapOptions, users]);\r\n\r\n  return (\r\n    <div className={'google-map'}>\r\n      {mapOptions && (\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GMAPS_API }}\r\n          center={mapOptions.center}\r\n          zoom={mapOptions.zoom}\r\n          onChange={({ center, zoom, bounds }) => setMapOptions({ center, zoom, bounds })}\r\n          yesIWantToUseGoogleMapApiInternals={true}\r\n          options={createMapOptions}\r\n        >\r\n          {clusters.map((groups) => {\r\n            if (groups.numPoints === 1) {\r\n              return (\r\n                <UserPin\r\n                  lat={groups.points[0].lat}\r\n                  lng={groups.points[0].lng}\r\n                  username={groups.points[0].username}\r\n                  avatar={groups.points[0].avatar}\r\n                  key={groups.points[0]._id}\r\n                  message={groups.points[0].latestMessage || null}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <Cluster\r\n                  lat={groups.lat}\r\n                  lng={groups.lng}\r\n                  key={groups.id}\r\n                  numPoints={groups.numPoints}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </GoogleMapReact>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleMap;\r\n","import React from 'react';\r\n\r\nfunction ChatTitle() {\r\n  return (\r\n    <div className={'chat-header'}>\r\n      <h1>Global Chat</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatTitle;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { StateContext } from '../../App';\r\n\r\nfunction ChatMessage({ sender, text, senderId }) {\r\n  const { socketId } = useContext(StateContext);\r\n  const [isUserMessage, toggleUserMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    toggleUserMessage(socketId === senderId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={'chat-message'}>\r\n      <div className={'chat-name'} style={{ float: isUserMessage ? 'right' : 'left' }}>\r\n        {sender}\r\n      </div>\r\n      <div\r\n        className={'chat-bubble'}\r\n        style={isUserMessage ? { float: 'right', backgroundColor: '#3AD064' } : { float: 'left' }}\r\n      >\r\n        {text}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n","import React from 'react';\r\nimport ChatMessage from './ChatMessage';\r\n\r\n// const FAKE_MESSAGES = [...Array(120)].fill(0).map((value, index) => {\r\n//   return {\r\n//     sender: 'User' + index,\r\n//     text: 'Hello Hello Hello vHello HelloHelloHello',\r\n//   };\r\n// });\r\n\r\nfunction trimMessages(messages) {\r\n  return messages;\r\n}\r\n\r\nfunction MessageList({ messages }) {\r\n  return (\r\n    <ul className={'message-list'}>\r\n      {trimMessages(messages || []).map((message, index) => {\r\n        return (\r\n          <li key={index}>\r\n            <ChatMessage sender={message.sender} text={message.text} senderId={message.senderId} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default MessageList;\r\n","import React, { useContext, useState } from 'react';\r\nimport { StateContext } from '../../App';\r\nimport { IoMdSend } from 'react-icons/all';\r\n\r\nfunction ChatInput() {\r\n  const { sendMessage } = useContext(StateContext);\r\n  const [message, setMessage] = useState('');\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        sendMessage(message);\r\n        setMessage('');\r\n      }}\r\n      className={'chat-form'}\r\n    >\r\n      <div className=\"standard-row\">\r\n        <input\r\n          className={'chat-form-input'}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          value={message}\r\n          placeholder={'Type a message...'}\r\n          type={'text'}\r\n        />\r\n        <button type={'submit'}>\r\n          <IoMdSend color={'#40A7E3'} size={'1.2em'}/>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './styles.css';\r\nimport ChatTitle from './ChatTitle';\r\nimport MessageList from './MessageList';\r\nimport ChatInput from './ChatInput';\r\n\r\nfunction scrollToBottom(id) {\r\n  console.log('Scrolling');\r\n  const div = document.getElementById(id);\r\n  div.scrollTop = div.scrollHeight - div.clientHeight;\r\n}\r\n\r\nfunction ChatBox({ messages }) {\r\n  const [isChatVisible, toggleChatVisibility] = useState(true);\r\n  useEffect(() => {\r\n    if (isChatVisible) {\r\n      scrollToBottom('messages');\r\n    }\r\n  }, [messages, isChatVisible]);\r\n\r\n  return (\r\n    <div className={'column-flex'}>\r\n      <ChatTitle onMinimise={toggleChatVisibility} />\r\n      {isChatVisible && (\r\n        <div className={'chat-body'} id={'messages'}>\r\n          <MessageList messages={messages} />\r\n        </div>\r\n      )}\r\n      <ChatInput />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n","import React from 'react';\r\nimport { MdGpsFixed } from 'react-icons/all';\r\nimport './styles.css';\r\n\r\nconst ReCenterIcon = ({ handleClick }) => {\r\n  return (\r\n    <button onClick={() => handleClick()} className=\"my-button recenter-button\">\r\n      <MdGpsFixed color={'#ffffff'} size={'1.4em'} />\r\n      RE-CENTER\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ReCenterIcon;\r\n","import React, { useContext } from 'react';\r\nimport { StateContext } from '../../App';\r\nimport './styles.css';\r\n\r\nconst NumberOfUsers = () => {\r\n  const { numOnline } = useContext(StateContext);\r\n\r\n  return <div className=\"top-right\">{`${numOnline} users online`}</div>;\r\n};\r\n\r\nexport default NumberOfUsers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nimport './App.css';\r\nimport { fakeUsers } from './util/fakeUsers';\r\nimport NameHolder from './components/nameholder/NameHolder';\r\nimport LoginModal from './loginmodal/LoginModal';\r\nimport GoogleMap from './components/GoogleMap';\r\nimport ChatBox from './components/chatbox/ChatBox';\r\nimport ReCenterIcon from './components/button/ReCenterIcon';\r\nimport NumberOfUsers from './components/usercount/NumberOfUsers';\r\n\r\nconst SERVER_URL = 'http://localhost:5000';\r\nexport const StateContext = React.createContext({});\r\n\r\nconst SG_POSITION = { lat: 1.3521, lng: 103.8198 };\r\n\r\nconst socket = io(SERVER_URL, {\r\n  withCredentials: true,\r\n  extraHeaders: {\r\n    'my-custom-header': 'abcd',\r\n  },\r\n});\r\n\r\nfunction createUserObj(data) {\r\n  return {\r\n    ...data,\r\n    lat: parseFloat(data.lat),\r\n    lng: parseFloat(data.lng),\r\n  };\r\n}\r\n\r\nfunction createMessageObj(data) {\r\n  return {\r\n    _id: data._id,\r\n    sender: data.username,\r\n    senderId: data.userId,\r\n    text: data.text,\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  // Global Variables\r\n  const [name, setName] = useState('');\r\n  const [image, setImage] = useState('boy1');\r\n  const [mapOptions, setMapOptions] = useState(null);\r\n\r\n  const [users, setUsers] = useState(fakeUsers);\r\n  const [messages, setMessages] = useState([]);\r\n  const [numOnline, setNumOnline] = useState(0);\r\n\r\n  const [isUserInputted, setIsUserInputted] = useState(false);\r\n\r\n  // Map Coordinates\r\n  const [currLocation, setCurrLocation] = useState(SG_POSITION);\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', (message) => {\r\n      console.log('A new user has connected');\r\n    });\r\n\r\n    socket.on('status', (msg) => {\r\n      console.log(msg);\r\n    });\r\n\r\n    socket.on('outputUser', (allUsers) => {\r\n      allUsers.map((user) => console.log('user ' + user.username + ' joined'));\r\n      const cleanedData = allUsers.map((user) => createUserObj(user));\r\n      setUsers((prevUsers) => [...prevUsers, ...cleanedData]);\r\n    });\r\n\r\n    socket.on('outputMessage', (newMessages) => {\r\n      const modifiedMsg = newMessages.map((msg) => createMessageObj(msg));\r\n      setMessages((prevMessages) => [...prevMessages, ...modifiedMsg]);\r\n\r\n      const ids = new Map();\r\n      newMessages.forEach((msg) => {\r\n        ids.set(msg.userId, msg.text);\r\n      });\r\n\r\n      setUsers((prevUsers) =>\r\n        prevUsers.map((usr) => {\r\n          if (ids.has(usr._id)) {\r\n            return { ...usr, latestMessage: ids.get(usr._id) };\r\n          } else {\r\n            return usr;\r\n          }\r\n        })\r\n      );\r\n    });\r\n\r\n    ['outputUpdateUser', 'outputPosition'].forEach((event) => {\r\n      socket.on(event, (newUsers) => {\r\n        newUsers.map((user) => console.log(user.username + ' was modified'));\r\n        const cleanedData = newUsers.map((user) => createUserObj(user));\r\n        const ids = new Set(cleanedData.map((u) => u._id));\r\n        setUsers((prevUsers) => [...newUsers, ...prevUsers.filter((u) => !ids.has(u._id))]);\r\n      });\r\n    });\r\n\r\n    socket.on('onlineUsers', (number) => {\r\n      console.log('users: ' + number);\r\n      setNumOnline(number + fakeUsers.length);\r\n    });\r\n\r\n    socket.on('userLeft', (userId) => {\r\n      console.log('user ' + userId + ' left' + ' called by ' + socket.id);\r\n      setUsers((prevUsers) => [...prevUsers.filter((u) => u._id !== userId)]);\r\n    });\r\n\r\n    // get location\r\n    if ('geolocation' in navigator) {\r\n      console.log('Location enabled');\r\n\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const location = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n        setCurrLocation(location);\r\n        setMapOptions({ center: location, zoom: 15 });\r\n      });\r\n\r\n      if (isUserInputted) {\r\n        navigator.geolocation.watchPosition((position) => {\r\n          console.log('geolocation changed');\r\n          if (\r\n            currLocation.lat !== position.coords.latitude ||\r\n            currLocation.lng !== position.coords.longitude\r\n          ) {\r\n            const location = {\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            };\r\n\r\n            setCurrLocation(location);\r\n            console.log(location);\r\n            socket.emit('inputPosition', location);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      console.log('Location disabled');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Changed name/avatar');\r\n    socket.emit('inputUpdateUser', { username: name, avatar: image });\r\n  }, [name, image]);\r\n\r\n  const contextProviderValue = {\r\n    name,\r\n    setName,\r\n    image,\r\n    setImage,\r\n    mapOptions,\r\n    setMapOptions,\r\n    socketId: socket.id,\r\n    currLocation,\r\n    numOnline,\r\n    sendMessage: (text) => socket.emit('inputMessage', { text: text }),\r\n    sendUserInput: (name, image) => {\r\n      socket.emit('inputUser', {\r\n        username: name,\r\n        avatar: image,\r\n        lat: currLocation.lat,\r\n        lng: currLocation.lng,\r\n      });\r\n      setIsUserInputted(true);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <StateContext.Provider value={contextProviderValue}>\r\n        <LoginModal />\r\n        <NameHolder />\r\n        <NumberOfUsers />\r\n        <GoogleMap users={users} />\r\n        <ReCenterIcon handleClick={() => setMapOptions({ center: currLocation, zoom: 15 })} />\r\n        <ChatBox messages={messages} />\r\n      </StateContext.Provider>\r\n      {/*<p className=\"app-name\">HELLO WORLD!</p>*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}